<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright 2020 Huawei Technologies Co., Ltd.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.edgegallery.user.auth.db.mapper.TenantPoMapper">

    <resultMap id="TenantRespDto" type="org.edgegallery.user.auth.controller.dto.response.TenantRespDto">
        <id property="userId" column="tenantid"/>
        <result property="username" column="username"/>
        <result property="company" column="company"/>
        <result property="telephone" column="telephonenumber"/>
        <result property="gender" column="gender"/>
        <result property="isAllowed" column="isallowed"/>
        <collection property="permissions" columnPrefix="permissions_" ofType="org.edgegallery.user.auth.controller.dto.response.RoleDto">
            <result column="platform" property="platform"/>
            <result column="role" property="role"/>
        </collection>
    </resultMap>

    <select id="getRolePoByTenantId" resultType="org.edgegallery.user.auth.db.entity.RolePo">
        select id, platform, role
        from tbl_tenant_role a left join tbl_role b on a.roleid = b.id
        where a.tenantid = #{tenantId}
    </select>

    <select id="getTenantBasicPoData" resultType="org.edgegallery.user.auth.db.entity.TenantPo">
        SELECT
        *
        FROM
        tbl_tenant
        WHERE
        TENANTID=#{tenantId}
    </select>

    <select id="getTenantByTelephone" resultType="org.edgegallery.user.auth.db.entity.TenantPo">
        SELECT
        *
        FROM
        tbl_tenant
        WHERE
        TELEPHONENUMBER=#{telephoneNumber}
    </select>

    <select id="getTenantByUsername" resultType="org.edgegallery.user.auth.db.entity.TenantPo">
        SELECT
        *
        FROM
        tbl_tenant
        WHERE
        USERNAME=#{username}
    </select>

    <insert id="addTenantPo" parameterType="org.edgegallery.user.auth.db.entity.TenantPo">
        INSERT INTO
        tbl_tenant
        (TENANTID, USERNAME, PASSWORD, COMPANY, TELEPHONENUMBER, GENDER, isallowed)
        VALUES
        (#{tenantId}, #{username}, #{password}, #{company}, #{telephoneNumber}, #{gender}, #{isAllowed})
    </insert>

    <delete id="deleteUser" >
        delete from tbl_tenant where TENANTID = #{tenantId};
    </delete>

    <update id="modifyPassword">
        UPDATE
        tbl_tenant
        SET PASSWORD = #{param2}
        WHERE
        TENANTID = #{param1};
    </update>

    <insert id ="insertRolesByTenantId" parameterType="java.util.List" >
        insert into
        tbl_tenant_role (tenantid, roleid)
        values
        <foreach collection ="param2" item="role" index= "index" separator =",">
            ( #{param1}, (select id from tbl_role where platform = #{role.platform} and role = #{role.role}))
        </foreach>
    </insert>

    <select id="getAllUsers" resultMap="TenantRespDto">
        select
            a.tenantid,
            a.username,
            a.company,
            a.telephonenumber,
            a.gender,
            a.isallowed,
            b.platform as permissions_platform,
            b.role as permissions_role
        from tbl_tenant a left join
        (select tenantid, platform, role from tbl_tenant_role left join tbl_role on tbl_tenant_role.roleid = tbl_role.id ) b
        on a.tenantid = b.tenantid
    </select>

    <update id="updateTenantById" parameterType="org.edgegallery.user.auth.controller.dto.response.TenantRespDto">
        update tbl_tenant
        set username = #{username}, company = #{company}, telephonenumber = #{telephone}, gender = #{gender}, isallowed = #{isAllowed}
        where tenantid = #{userId}
    </update>

    <delete id="deleteRolesByTenantId">
        delete from tbl_tenant_role where tenantid = #{tenantId}
    </delete>
</mapper>